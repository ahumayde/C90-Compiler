Terminals unused in grammar

    SIZEOF
    PTR_OP
    LEFT_OP
    RIGHT_OP
    LEFT_ASSIGN
    RIGHT_ASSIGN
    AND_ASSIGN
    XOR_ASSIGN
    OR_ASSIGN
    TYPEDEF
    EXTERN
    STATIC
    AUTO
    REGISTER
    CONST
    VOLATILE
    STRUCT
    UNION
    ENUM
    ELLIPSIS
    CASE
    DEFAULT
    SWITCH
    FOR
    GOTO
    CONTINUE
    BREAK


Grammar

    0 $accept: ROOT $end

    1 ROOT: translation_unit

    2 translation_unit: external_declaration
    3                 | declaration

    4 external_declaration: function_definition

    5 declaration_list: declaration
    6                 | declaration_list declaration

    7 declaration: declaration_specifiers init_declarator ';'

    8 init_declarator: declarator
    9                | declarator '=' assignment_expression

   10 function_definition: declaration_specifiers declarator compound_statement
   11                    | jump_statement

   12 declaration_specifiers: type_specifier

   13 type_specifier: VOID
   14               | CHAR
   15               | SHORT
   16               | INT
   17               | LONG
   18               | FLOAT
   19               | DOUBLE
   20               | SIGNED
   21               | UNSIGNED
   22               | TYPE_NAME

   23 declarator: direct_declarator

   24 direct_declarator: IDENTIFIER
   25                  | '(' declarator ')'
   26                  | direct_declarator '(' ')'

   27 compound_statement: '{' '}'
   28                   | '{' statement_list '}'
   29                   | '{' declaration_list statement_list '}'
   30                   | '{' declaration_list '}'

   31 statement_list: statement
   32               | statement_list statement

   33 statement: jump_statement
   34          | expression_statement
   35          | compound_statement
   36          | selection_statement
   37          | iteration_statement

   38 jump_statement: RETURN expression ';'

   39 expression_statement: ';'
   40                     | expression ';'

   41 selection_statement: IF '(' expression ')' statement
   42                    | IF '(' expression ')' statement ELSE statement

   43 iteration_statement: WHILE '(' expression ')' statement
   44                    | DO statement WHILE '(' expression ')' ';'

   45 expression: assignment_expression

   46 postfix_expression: primary_expression
   47                   | postfix_expression INC_OP
   48                   | postfix_expression DEC_OP

   49 unary_expression: postfix_expression
   50                 | INC_OP unary_expression
   51                 | DEC_OP unary_expression

   52 multiplicative_expression: unary_expression
   53                          | multiplicative_expression '*' unary_expression
   54                          | multiplicative_expression '/' unary_expression

   55 additive_expression: multiplicative_expression
   56                    | additive_expression '+' multiplicative_expression
   57                    | additive_expression '-' multiplicative_expression

   58 relational_expression: additive_expression
   59                      | relational_expression '<' additive_expression
   60                      | relational_expression '>' additive_expression
   61                      | relational_expression LE_OP additive_expression
   62                      | relational_expression GE_OP additive_expression

   63 equality_expression: relational_expression
   64                    | equality_expression EQ_OP relational_expression
   65                    | equality_expression NE_OP relational_expression

   66 and_expression: equality_expression
   67               | and_expression '&' equality_expression

   68 exclusive_or_expression: and_expression
   69                        | exclusive_or_expression '^' and_expression

   70 inclusive_or_expression: exclusive_or_expression
   71                        | inclusive_or_expression '|' exclusive_or_expression

   72 logical_and_expression: inclusive_or_expression
   73                       | logical_and_expression AND_OP inclusive_or_expression

   74 logical_or_expression: logical_and_expression
   75                      | logical_or_expression OR_OP logical_and_expression

   76 assignment_expression: logical_or_expression
   77                      | unary_expression assignment_operator assignment_expression

   78 primary_expression: IDENTIFIER
   79                   | CONSTANT
   80                   | STRING_LITERAL
   81                   | '(' expression ')'

   82 assignment_operator: '='
   83                    | MUL_ASSIGN
   84                    | DIV_ASSIGN
   85                    | MOD_ASSIGN
   86                    | ADD_ASSIGN
   87                    | SUB_ASSIGN


Terminals, with rules where they appear

    $end (0) 0
    '&' (38) 67
    '(' (40) 25 26 41 42 43 44 81
    ')' (41) 25 26 41 42 43 44 81
    '*' (42) 53
    '+' (43) 56
    '-' (45) 57
    '/' (47) 54
    ';' (59) 7 38 39 40 44
    '<' (60) 59
    '=' (61) 9 82
    '>' (62) 60
    '^' (94) 69
    '{' (123) 27 28 29 30
    '|' (124) 71
    '}' (125) 27 28 29 30
    error (256)
    SIZEOF (258)
    PTR_OP (259)
    INC_OP (260) 47 50
    DEC_OP (261) 48 51
    LEFT_OP (262)
    RIGHT_OP (263)
    LE_OP (264) 61
    GE_OP (265) 62
    EQ_OP (266) 64
    NE_OP (267) 65
    AND_OP (268) 73
    OR_OP (269) 75
    LEFT_ASSIGN (270)
    RIGHT_ASSIGN (271)
    AND_ASSIGN (272)
    XOR_ASSIGN (273)
    OR_ASSIGN (274)
    TYPEDEF (275)
    EXTERN (276)
    STATIC (277)
    AUTO (278)
    REGISTER (279)
    CONST (280)
    VOLATILE (281)
    STRUCT (282)
    UNION (283)
    ENUM (284)
    ELLIPSIS (285)
    CASE (286)
    DEFAULT (287)
    IF (288) 41 42
    ELSE (289) 42
    SWITCH (290)
    WHILE (291) 43 44
    DO (292) 44
    FOR (293)
    GOTO (294)
    CONTINUE (295)
    BREAK (296)
    MUL_ASSIGN <string> (297) 83
    DIV_ASSIGN <string> (298) 84
    MOD_ASSIGN <string> (299) 85
    ADD_ASSIGN <string> (300) 86
    SUB_ASSIGN <string> (301) 87
    IDENTIFIER <string> (302) 24 78
    CONSTANT <string> (303) 79
    STRING_LITERAL <string> (304) 80
    CHAR <string> (305) 14
    SHORT <string> (306) 15
    INT <string> (307) 16
    LONG <string> (308) 17
    SIGNED <string> (309) 20
    UNSIGNED <string> (310) 21
    FLOAT <string> (311) 18
    DOUBLE <string> (312) 19
    VOID <string> (313) 13
    TYPE_NAME <string> (314) 22
    RETURN <string> (315) 38
    LOWER_THAN_ELSE (316)


Nonterminals, with rules where they appear

    $accept (77)
        on left: 0
    ROOT (78)
        on left: 1
        on right: 0
    translation_unit <block> (79)
        on left: 2 3
        on right: 1
    external_declaration <block> (80)
        on left: 4
        on right: 2
    declaration_list <list> (81)
        on left: 5 6
        on right: 6 29 30
    declaration <block> (82)
        on left: 7
        on right: 3 5 6
    init_declarator <block> (83)
        on left: 8 9
        on right: 7
    function_definition <block> (84)
        on left: 10 11
        on right: 4
    declaration_specifiers <string> (85)
        on left: 12
        on right: 7 10
    type_specifier <string> (86)
        on left: 13 14 15 16 17 18 19 20 21 22
        on right: 12
    declarator <block> (87)
        on left: 23
        on right: 8 9 10 25
    direct_declarator <block> (88)
        on left: 24 25 26
        on right: 23 26
    compound_statement <block> (89)
        on left: 27 28 29 30
        on right: 10 35
    statement_list <list> (90)
        on left: 31 32
        on right: 28 29 32
    statement <block> (91)
        on left: 33 34 35 36 37
        on right: 31 32 41 42 43 44
    jump_statement <block> (92)
        on left: 38
        on right: 11 33
    expression_statement <block> (93)
        on left: 39 40
        on right: 34
    selection_statement <block> (94)
        on left: 41 42
        on right: 36
    iteration_statement <block> (95)
        on left: 43 44
        on right: 37
    expression <block> (96)
        on left: 45
        on right: 38 40 41 42 43 44 81
    postfix_expression <block> (97)
        on left: 46 47 48
        on right: 47 48 49
    unary_expression <block> (98)
        on left: 49 50 51
        on right: 50 51 52 53 54 77
    multiplicative_expression <block> (99)
        on left: 52 53 54
        on right: 53 54 55 56 57
    additive_expression <block> (100)
        on left: 55 56 57
        on right: 56 57 58 59 60 61 62
    relational_expression <block> (101)
        on left: 58 59 60 61 62
        on right: 59 60 61 62 63 64 65
    equality_expression <block> (102)
        on left: 63 64 65
        on right: 64 65 66 67
    and_expression <block> (103)
        on left: 66 67
        on right: 67 68 69
    exclusive_or_expression <block> (104)
        on left: 68 69
        on right: 69 70 71
    inclusive_or_expression <block> (105)
        on left: 70 71
        on right: 71 72 73
    logical_and_expression <block> (106)
        on left: 72 73
        on right: 73 74 75
    logical_or_expression <block> (107)
        on left: 74 75
        on right: 75 76
    assignment_expression <block> (108)
        on left: 76 77
        on right: 9 45 77
    primary_expression <block> (109)
        on left: 78 79 80 81
        on right: 46
    assignment_operator <string> (110)
        on left: 82 83 84 85 86 87
        on right: 77


State 0

    0 $accept: . ROOT $end

    CHAR       shift, and go to state 1
    SHORT      shift, and go to state 2
    INT        shift, and go to state 3
    LONG       shift, and go to state 4
    SIGNED     shift, and go to state 5
    UNSIGNED   shift, and go to state 6
    FLOAT      shift, and go to state 7
    DOUBLE     shift, and go to state 8
    VOID       shift, and go to state 9
    TYPE_NAME  shift, and go to state 10
    RETURN     shift, and go to state 11

    ROOT                    go to state 12
    translation_unit        go to state 13
    external_declaration    go to state 14
    declaration             go to state 15
    function_definition     go to state 16
    declaration_specifiers  go to state 17
    type_specifier          go to state 18
    jump_statement          go to state 19


State 1

   14 type_specifier: CHAR .

    $default  reduce using rule 14 (type_specifier)


State 2

   15 type_specifier: SHORT .

    $default  reduce using rule 15 (type_specifier)


State 3

   16 type_specifier: INT .

    $default  reduce using rule 16 (type_specifier)


State 4

   17 type_specifier: LONG .

    $default  reduce using rule 17 (type_specifier)


State 5

   20 type_specifier: SIGNED .

    $default  reduce using rule 20 (type_specifier)


State 6

   21 type_specifier: UNSIGNED .

    $default  reduce using rule 21 (type_specifier)


State 7

   18 type_specifier: FLOAT .

    $default  reduce using rule 18 (type_specifier)


State 8

   19 type_specifier: DOUBLE .

    $default  reduce using rule 19 (type_specifier)


State 9

   13 type_specifier: VOID .

    $default  reduce using rule 13 (type_specifier)


State 10

   22 type_specifier: TYPE_NAME .

    $default  reduce using rule 22 (type_specifier)


State 11

   38 jump_statement: RETURN . expression ';'

    INC_OP          shift, and go to state 20
    DEC_OP          shift, and go to state 21
    IDENTIFIER      shift, and go to state 22
    CONSTANT        shift, and go to state 23
    STRING_LITERAL  shift, and go to state 24
    '('             shift, and go to state 25

    expression                 go to state 26
    postfix_expression         go to state 27
    unary_expression           go to state 28
    multiplicative_expression  go to state 29
    additive_expression        go to state 30
    relational_expression      go to state 31
    equality_expression        go to state 32
    and_expression             go to state 33
    exclusive_or_expression    go to state 34
    inclusive_or_expression    go to state 35
    logical_and_expression     go to state 36
    logical_or_expression      go to state 37
    assignment_expression      go to state 38
    primary_expression         go to state 39


State 12

    0 $accept: ROOT . $end

    $end  shift, and go to state 40


State 13

    1 ROOT: translation_unit .

    $default  reduce using rule 1 (ROOT)


State 14

    2 translation_unit: external_declaration .

    $default  reduce using rule 2 (translation_unit)


State 15

    3 translation_unit: declaration .

    $default  reduce using rule 3 (translation_unit)


State 16

    4 external_declaration: function_definition .

    $default  reduce using rule 4 (external_declaration)


State 17

    7 declaration: declaration_specifiers . init_declarator ';'
   10 function_definition: declaration_specifiers . declarator compound_statement

    IDENTIFIER  shift, and go to state 41
    '('         shift, and go to state 42

    init_declarator    go to state 43
    declarator         go to state 44
    direct_declarator  go to state 45


State 18

   12 declaration_specifiers: type_specifier .

    $default  reduce using rule 12 (declaration_specifiers)


State 19

   11 function_definition: jump_statement .

    $default  reduce using rule 11 (function_definition)


State 20

   50 unary_expression: INC_OP . unary_expression

    INC_OP          shift, and go to state 20
    DEC_OP          shift, and go to state 21
    IDENTIFIER      shift, and go to state 22
    CONSTANT        shift, and go to state 23
    STRING_LITERAL  shift, and go to state 24
    '('             shift, and go to state 25

    postfix_expression  go to state 27
    unary_expression    go to state 46
    primary_expression  go to state 39


State 21

   51 unary_expression: DEC_OP . unary_expression

    INC_OP          shift, and go to state 20
    DEC_OP          shift, and go to state 21
    IDENTIFIER      shift, and go to state 22
    CONSTANT        shift, and go to state 23
    STRING_LITERAL  shift, and go to state 24
    '('             shift, and go to state 25

    postfix_expression  go to state 27
    unary_expression    go to state 47
    primary_expression  go to state 39


State 22

   78 primary_expression: IDENTIFIER .

    $default  reduce using rule 78 (primary_expression)


State 23

   79 primary_expression: CONSTANT .

    $default  reduce using rule 79 (primary_expression)


State 24

   80 primary_expression: STRING_LITERAL .

    $default  reduce using rule 80 (primary_expression)


State 25

   81 primary_expression: '(' . expression ')'

    INC_OP          shift, and go to state 20
    DEC_OP          shift, and go to state 21
    IDENTIFIER      shift, and go to state 22
    CONSTANT        shift, and go to state 23
    STRING_LITERAL  shift, and go to state 24
    '('             shift, and go to state 25

    expression                 go to state 48
    postfix_expression         go to state 27
    unary_expression           go to state 28
    multiplicative_expression  go to state 29
    additive_expression        go to state 30
    relational_expression      go to state 31
    equality_expression        go to state 32
    and_expression             go to state 33
    exclusive_or_expression    go to state 34
    inclusive_or_expression    go to state 35
    logical_and_expression     go to state 36
    logical_or_expression      go to state 37
    assignment_expression      go to state 38
    primary_expression         go to state 39


State 26

   38 jump_statement: RETURN expression . ';'

    ';'  shift, and go to state 49


State 27

   47 postfix_expression: postfix_expression . INC_OP
   48                   | postfix_expression . DEC_OP
   49 unary_expression: postfix_expression .

    INC_OP  shift, and go to state 50
    DEC_OP  shift, and go to state 51

    $default  reduce using rule 49 (unary_expression)


State 28

   52 multiplicative_expression: unary_expression .
   77 assignment_expression: unary_expression . assignment_operator assignment_expression

    MUL_ASSIGN  shift, and go to state 52
    DIV_ASSIGN  shift, and go to state 53
    MOD_ASSIGN  shift, and go to state 54
    ADD_ASSIGN  shift, and go to state 55
    SUB_ASSIGN  shift, and go to state 56
    '='         shift, and go to state 57

    $default  reduce using rule 52 (multiplicative_expression)

    assignment_operator  go to state 58


State 29

   53 multiplicative_expression: multiplicative_expression . '*' unary_expression
   54                          | multiplicative_expression . '/' unary_expression
   55 additive_expression: multiplicative_expression .

    '*'  shift, and go to state 59
    '/'  shift, and go to state 60

    $default  reduce using rule 55 (additive_expression)


State 30

   56 additive_expression: additive_expression . '+' multiplicative_expression
   57                    | additive_expression . '-' multiplicative_expression
   58 relational_expression: additive_expression .

    '+'  shift, and go to state 61
    '-'  shift, and go to state 62

    $default  reduce using rule 58 (relational_expression)


State 31

   59 relational_expression: relational_expression . '<' additive_expression
   60                      | relational_expression . '>' additive_expression
   61                      | relational_expression . LE_OP additive_expression
   62                      | relational_expression . GE_OP additive_expression
   63 equality_expression: relational_expression .

    LE_OP  shift, and go to state 63
    GE_OP  shift, and go to state 64
    '<'    shift, and go to state 65
    '>'    shift, and go to state 66

    $default  reduce using rule 63 (equality_expression)


State 32

   64 equality_expression: equality_expression . EQ_OP relational_expression
   65                    | equality_expression . NE_OP relational_expression
   66 and_expression: equality_expression .

    EQ_OP  shift, and go to state 67
    NE_OP  shift, and go to state 68

    $default  reduce using rule 66 (and_expression)


State 33

   67 and_expression: and_expression . '&' equality_expression
   68 exclusive_or_expression: and_expression .

    '&'  shift, and go to state 69

    $default  reduce using rule 68 (exclusive_or_expression)


State 34

   69 exclusive_or_expression: exclusive_or_expression . '^' and_expression
   70 inclusive_or_expression: exclusive_or_expression .

    '^'  shift, and go to state 70

    $default  reduce using rule 70 (inclusive_or_expression)


State 35

   71 inclusive_or_expression: inclusive_or_expression . '|' exclusive_or_expression
   72 logical_and_expression: inclusive_or_expression .

    '|'  shift, and go to state 71

    $default  reduce using rule 72 (logical_and_expression)


State 36

   73 logical_and_expression: logical_and_expression . AND_OP inclusive_or_expression
   74 logical_or_expression: logical_and_expression .

    AND_OP  shift, and go to state 72

    $default  reduce using rule 74 (logical_or_expression)


State 37

   75 logical_or_expression: logical_or_expression . OR_OP logical_and_expression
   76 assignment_expression: logical_or_expression .

    OR_OP  shift, and go to state 73

    $default  reduce using rule 76 (assignment_expression)


State 38

   45 expression: assignment_expression .

    $default  reduce using rule 45 (expression)


State 39

   46 postfix_expression: primary_expression .

    $default  reduce using rule 46 (postfix_expression)


State 40

    0 $accept: ROOT $end .

    $default  accept


State 41

   24 direct_declarator: IDENTIFIER .

    $default  reduce using rule 24 (direct_declarator)


State 42

   25 direct_declarator: '(' . declarator ')'

    IDENTIFIER  shift, and go to state 41
    '('         shift, and go to state 42

    declarator         go to state 74
    direct_declarator  go to state 45


State 43

    7 declaration: declaration_specifiers init_declarator . ';'

    ';'  shift, and go to state 75


State 44

    8 init_declarator: declarator .
    9                | declarator . '=' assignment_expression
   10 function_definition: declaration_specifiers declarator . compound_statement

    '='  shift, and go to state 76
    '{'  shift, and go to state 77

    $default  reduce using rule 8 (init_declarator)

    compound_statement  go to state 78


State 45

   23 declarator: direct_declarator .
   26 direct_declarator: direct_declarator . '(' ')'

    '('  shift, and go to state 79

    $default  reduce using rule 23 (declarator)


State 46

   50 unary_expression: INC_OP unary_expression .

    $default  reduce using rule 50 (unary_expression)


State 47

   51 unary_expression: DEC_OP unary_expression .

    $default  reduce using rule 51 (unary_expression)


State 48

   81 primary_expression: '(' expression . ')'

    ')'  shift, and go to state 80


State 49

   38 jump_statement: RETURN expression ';' .

    $default  reduce using rule 38 (jump_statement)


State 50

   47 postfix_expression: postfix_expression INC_OP .

    $default  reduce using rule 47 (postfix_expression)


State 51

   48 postfix_expression: postfix_expression DEC_OP .

    $default  reduce using rule 48 (postfix_expression)


State 52

   83 assignment_operator: MUL_ASSIGN .

    $default  reduce using rule 83 (assignment_operator)


State 53

   84 assignment_operator: DIV_ASSIGN .

    $default  reduce using rule 84 (assignment_operator)


State 54

   85 assignment_operator: MOD_ASSIGN .

    $default  reduce using rule 85 (assignment_operator)


State 55

   86 assignment_operator: ADD_ASSIGN .

    $default  reduce using rule 86 (assignment_operator)


State 56

   87 assignment_operator: SUB_ASSIGN .

    $default  reduce using rule 87 (assignment_operator)


State 57

   82 assignment_operator: '=' .

    $default  reduce using rule 82 (assignment_operator)


State 58

   77 assignment_expression: unary_expression assignment_operator . assignment_expression

    INC_OP          shift, and go to state 20
    DEC_OP          shift, and go to state 21
    IDENTIFIER      shift, and go to state 22
    CONSTANT        shift, and go to state 23
    STRING_LITERAL  shift, and go to state 24
    '('             shift, and go to state 25

    postfix_expression         go to state 27
    unary_expression           go to state 28
    multiplicative_expression  go to state 29
    additive_expression        go to state 30
    relational_expression      go to state 31
    equality_expression        go to state 32
    and_expression             go to state 33
    exclusive_or_expression    go to state 34
    inclusive_or_expression    go to state 35
    logical_and_expression     go to state 36
    logical_or_expression      go to state 37
    assignment_expression      go to state 81
    primary_expression         go to state 39


State 59

   53 multiplicative_expression: multiplicative_expression '*' . unary_expression

    INC_OP          shift, and go to state 20
    DEC_OP          shift, and go to state 21
    IDENTIFIER      shift, and go to state 22
    CONSTANT        shift, and go to state 23
    STRING_LITERAL  shift, and go to state 24
    '('             shift, and go to state 25

    postfix_expression  go to state 27
    unary_expression    go to state 82
    primary_expression  go to state 39


State 60

   54 multiplicative_expression: multiplicative_expression '/' . unary_expression

    INC_OP          shift, and go to state 20
    DEC_OP          shift, and go to state 21
    IDENTIFIER      shift, and go to state 22
    CONSTANT        shift, and go to state 23
    STRING_LITERAL  shift, and go to state 24
    '('             shift, and go to state 25

    postfix_expression  go to state 27
    unary_expression    go to state 83
    primary_expression  go to state 39


State 61

   56 additive_expression: additive_expression '+' . multiplicative_expression

    INC_OP          shift, and go to state 20
    DEC_OP          shift, and go to state 21
    IDENTIFIER      shift, and go to state 22
    CONSTANT        shift, and go to state 23
    STRING_LITERAL  shift, and go to state 24
    '('             shift, and go to state 25

    postfix_expression         go to state 27
    unary_expression           go to state 84
    multiplicative_expression  go to state 85
    primary_expression         go to state 39


State 62

   57 additive_expression: additive_expression '-' . multiplicative_expression

    INC_OP          shift, and go to state 20
    DEC_OP          shift, and go to state 21
    IDENTIFIER      shift, and go to state 22
    CONSTANT        shift, and go to state 23
    STRING_LITERAL  shift, and go to state 24
    '('             shift, and go to state 25

    postfix_expression         go to state 27
    unary_expression           go to state 84
    multiplicative_expression  go to state 86
    primary_expression         go to state 39


State 63

   61 relational_expression: relational_expression LE_OP . additive_expression

    INC_OP          shift, and go to state 20
    DEC_OP          shift, and go to state 21
    IDENTIFIER      shift, and go to state 22
    CONSTANT        shift, and go to state 23
    STRING_LITERAL  shift, and go to state 24
    '('             shift, and go to state 25

    postfix_expression         go to state 27
    unary_expression           go to state 84
    multiplicative_expression  go to state 29
    additive_expression        go to state 87
    primary_expression         go to state 39


State 64

   62 relational_expression: relational_expression GE_OP . additive_expression

    INC_OP          shift, and go to state 20
    DEC_OP          shift, and go to state 21
    IDENTIFIER      shift, and go to state 22
    CONSTANT        shift, and go to state 23
    STRING_LITERAL  shift, and go to state 24
    '('             shift, and go to state 25

    postfix_expression         go to state 27
    unary_expression           go to state 84
    multiplicative_expression  go to state 29
    additive_expression        go to state 88
    primary_expression         go to state 39


State 65

   59 relational_expression: relational_expression '<' . additive_expression

    INC_OP          shift, and go to state 20
    DEC_OP          shift, and go to state 21
    IDENTIFIER      shift, and go to state 22
    CONSTANT        shift, and go to state 23
    STRING_LITERAL  shift, and go to state 24
    '('             shift, and go to state 25

    postfix_expression         go to state 27
    unary_expression           go to state 84
    multiplicative_expression  go to state 29
    additive_expression        go to state 89
    primary_expression         go to state 39


State 66

   60 relational_expression: relational_expression '>' . additive_expression

    INC_OP          shift, and go to state 20
    DEC_OP          shift, and go to state 21
    IDENTIFIER      shift, and go to state 22
    CONSTANT        shift, and go to state 23
    STRING_LITERAL  shift, and go to state 24
    '('             shift, and go to state 25

    postfix_expression         go to state 27
    unary_expression           go to state 84
    multiplicative_expression  go to state 29
    additive_expression        go to state 90
    primary_expression         go to state 39


State 67

   64 equality_expression: equality_expression EQ_OP . relational_expression

    INC_OP          shift, and go to state 20
    DEC_OP          shift, and go to state 21
    IDENTIFIER      shift, and go to state 22
    CONSTANT        shift, and go to state 23
    STRING_LITERAL  shift, and go to state 24
    '('             shift, and go to state 25

    postfix_expression         go to state 27
    unary_expression           go to state 84
    multiplicative_expression  go to state 29
    additive_expression        go to state 30
    relational_expression      go to state 91
    primary_expression         go to state 39


State 68

   65 equality_expression: equality_expression NE_OP . relational_expression

    INC_OP          shift, and go to state 20
    DEC_OP          shift, and go to state 21
    IDENTIFIER      shift, and go to state 22
    CONSTANT        shift, and go to state 23
    STRING_LITERAL  shift, and go to state 24
    '('             shift, and go to state 25

    postfix_expression         go to state 27
    unary_expression           go to state 84
    multiplicative_expression  go to state 29
    additive_expression        go to state 30
    relational_expression      go to state 92
    primary_expression         go to state 39


State 69

   67 and_expression: and_expression '&' . equality_expression

    INC_OP          shift, and go to state 20
    DEC_OP          shift, and go to state 21
    IDENTIFIER      shift, and go to state 22
    CONSTANT        shift, and go to state 23
    STRING_LITERAL  shift, and go to state 24
    '('             shift, and go to state 25

    postfix_expression         go to state 27
    unary_expression           go to state 84
    multiplicative_expression  go to state 29
    additive_expression        go to state 30
    relational_expression      go to state 31
    equality_expression        go to state 93
    primary_expression         go to state 39


State 70

   69 exclusive_or_expression: exclusive_or_expression '^' . and_expression

    INC_OP          shift, and go to state 20
    DEC_OP          shift, and go to state 21
    IDENTIFIER      shift, and go to state 22
    CONSTANT        shift, and go to state 23
    STRING_LITERAL  shift, and go to state 24
    '('             shift, and go to state 25

    postfix_expression         go to state 27
    unary_expression           go to state 84
    multiplicative_expression  go to state 29
    additive_expression        go to state 30
    relational_expression      go to state 31
    equality_expression        go to state 32
    and_expression             go to state 94
    primary_expression         go to state 39


State 71

   71 inclusive_or_expression: inclusive_or_expression '|' . exclusive_or_expression

    INC_OP          shift, and go to state 20
    DEC_OP          shift, and go to state 21
    IDENTIFIER      shift, and go to state 22
    CONSTANT        shift, and go to state 23
    STRING_LITERAL  shift, and go to state 24
    '('             shift, and go to state 25

    postfix_expression         go to state 27
    unary_expression           go to state 84
    multiplicative_expression  go to state 29
    additive_expression        go to state 30
    relational_expression      go to state 31
    equality_expression        go to state 32
    and_expression             go to state 33
    exclusive_or_expression    go to state 95
    primary_expression         go to state 39


State 72

   73 logical_and_expression: logical_and_expression AND_OP . inclusive_or_expression

    INC_OP          shift, and go to state 20
    DEC_OP          shift, and go to state 21
    IDENTIFIER      shift, and go to state 22
    CONSTANT        shift, and go to state 23
    STRING_LITERAL  shift, and go to state 24
    '('             shift, and go to state 25

    postfix_expression         go to state 27
    unary_expression           go to state 84
    multiplicative_expression  go to state 29
    additive_expression        go to state 30
    relational_expression      go to state 31
    equality_expression        go to state 32
    and_expression             go to state 33
    exclusive_or_expression    go to state 34
    inclusive_or_expression    go to state 96
    primary_expression         go to state 39


State 73

   75 logical_or_expression: logical_or_expression OR_OP . logical_and_expression

    INC_OP          shift, and go to state 20
    DEC_OP          shift, and go to state 21
    IDENTIFIER      shift, and go to state 22
    CONSTANT        shift, and go to state 23
    STRING_LITERAL  shift, and go to state 24
    '('             shift, and go to state 25

    postfix_expression         go to state 27
    unary_expression           go to state 84
    multiplicative_expression  go to state 29
    additive_expression        go to state 30
    relational_expression      go to state 31
    equality_expression        go to state 32
    and_expression             go to state 33
    exclusive_or_expression    go to state 34
    inclusive_or_expression    go to state 35
    logical_and_expression     go to state 97
    primary_expression         go to state 39


State 74

   25 direct_declarator: '(' declarator . ')'

    ')'  shift, and go to state 98


State 75

    7 declaration: declaration_specifiers init_declarator ';' .

    $default  reduce using rule 7 (declaration)


State 76

    9 init_declarator: declarator '=' . assignment_expression

    INC_OP          shift, and go to state 20
    DEC_OP          shift, and go to state 21
    IDENTIFIER      shift, and go to state 22
    CONSTANT        shift, and go to state 23
    STRING_LITERAL  shift, and go to state 24
    '('             shift, and go to state 25

    postfix_expression         go to state 27
    unary_expression           go to state 28
    multiplicative_expression  go to state 29
    additive_expression        go to state 30
    relational_expression      go to state 31
    equality_expression        go to state 32
    and_expression             go to state 33
    exclusive_or_expression    go to state 34
    inclusive_or_expression    go to state 35
    logical_and_expression     go to state 36
    logical_or_expression      go to state 37
    assignment_expression      go to state 99
    primary_expression         go to state 39


State 77

   27 compound_statement: '{' . '}'
   28                   | '{' . statement_list '}'
   29                   | '{' . declaration_list statement_list '}'
   30                   | '{' . declaration_list '}'

    INC_OP          shift, and go to state 20
    DEC_OP          shift, and go to state 21
    IF              shift, and go to state 100
    WHILE           shift, and go to state 101
    DO              shift, and go to state 102
    IDENTIFIER      shift, and go to state 22
    CONSTANT        shift, and go to state 23
    STRING_LITERAL  shift, and go to state 24
    CHAR            shift, and go to state 1
    SHORT           shift, and go to state 2
    INT             shift, and go to state 3
    LONG            shift, and go to state 4
    SIGNED          shift, and go to state 5
    UNSIGNED        shift, and go to state 6
    FLOAT           shift, and go to state 7
    DOUBLE          shift, and go to state 8
    VOID            shift, and go to state 9
    TYPE_NAME       shift, and go to state 10
    RETURN          shift, and go to state 11
    ';'             shift, and go to state 103
    '('             shift, and go to state 25
    '{'             shift, and go to state 77
    '}'             shift, and go to state 104

    declaration_list           go to state 105
    declaration                go to state 106
    declaration_specifiers     go to state 107
    type_specifier             go to state 18
    compound_statement         go to state 108
    statement_list             go to state 109
    statement                  go to state 110
    jump_statement             go to state 111
    expression_statement       go to state 112
    selection_statement        go to state 113
    iteration_statement        go to state 114
    expression                 go to state 115
    postfix_expression         go to state 27
    unary_expression           go to state 28
    multiplicative_expression  go to state 29
    additive_expression        go to state 30
    relational_expression      go to state 31
    equality_expression        go to state 32
    and_expression             go to state 33
    exclusive_or_expression    go to state 34
    inclusive_or_expression    go to state 35
    logical_and_expression     go to state 36
    logical_or_expression      go to state 37
    assignment_expression      go to state 38
    primary_expression         go to state 39


State 78

   10 function_definition: declaration_specifiers declarator compound_statement .

    $default  reduce using rule 10 (function_definition)


State 79

   26 direct_declarator: direct_declarator '(' . ')'

    ')'  shift, and go to state 116


State 80

   81 primary_expression: '(' expression ')' .

    $default  reduce using rule 81 (primary_expression)


State 81

   77 assignment_expression: unary_expression assignment_operator assignment_expression .

    $default  reduce using rule 77 (assignment_expression)


State 82

   53 multiplicative_expression: multiplicative_expression '*' unary_expression .

    $default  reduce using rule 53 (multiplicative_expression)


State 83

   54 multiplicative_expression: multiplicative_expression '/' unary_expression .

    $default  reduce using rule 54 (multiplicative_expression)


State 84

   52 multiplicative_expression: unary_expression .

    $default  reduce using rule 52 (multiplicative_expression)


State 85

   53 multiplicative_expression: multiplicative_expression . '*' unary_expression
   54                          | multiplicative_expression . '/' unary_expression
   56 additive_expression: additive_expression '+' multiplicative_expression .

    '*'  shift, and go to state 59
    '/'  shift, and go to state 60

    $default  reduce using rule 56 (additive_expression)


State 86

   53 multiplicative_expression: multiplicative_expression . '*' unary_expression
   54                          | multiplicative_expression . '/' unary_expression
   57 additive_expression: additive_expression '-' multiplicative_expression .

    '*'  shift, and go to state 59
    '/'  shift, and go to state 60

    $default  reduce using rule 57 (additive_expression)


State 87

   56 additive_expression: additive_expression . '+' multiplicative_expression
   57                    | additive_expression . '-' multiplicative_expression
   61 relational_expression: relational_expression LE_OP additive_expression .

    '+'  shift, and go to state 61
    '-'  shift, and go to state 62

    $default  reduce using rule 61 (relational_expression)


State 88

   56 additive_expression: additive_expression . '+' multiplicative_expression
   57                    | additive_expression . '-' multiplicative_expression
   62 relational_expression: relational_expression GE_OP additive_expression .

    '+'  shift, and go to state 61
    '-'  shift, and go to state 62

    $default  reduce using rule 62 (relational_expression)


State 89

   56 additive_expression: additive_expression . '+' multiplicative_expression
   57                    | additive_expression . '-' multiplicative_expression
   59 relational_expression: relational_expression '<' additive_expression .

    '+'  shift, and go to state 61
    '-'  shift, and go to state 62

    $default  reduce using rule 59 (relational_expression)


State 90

   56 additive_expression: additive_expression . '+' multiplicative_expression
   57                    | additive_expression . '-' multiplicative_expression
   60 relational_expression: relational_expression '>' additive_expression .

    '+'  shift, and go to state 61
    '-'  shift, and go to state 62

    $default  reduce using rule 60 (relational_expression)


State 91

   59 relational_expression: relational_expression . '<' additive_expression
   60                      | relational_expression . '>' additive_expression
   61                      | relational_expression . LE_OP additive_expression
   62                      | relational_expression . GE_OP additive_expression
   64 equality_expression: equality_expression EQ_OP relational_expression .

    LE_OP  shift, and go to state 63
    GE_OP  shift, and go to state 64
    '<'    shift, and go to state 65
    '>'    shift, and go to state 66

    $default  reduce using rule 64 (equality_expression)


State 92

   59 relational_expression: relational_expression . '<' additive_expression
   60                      | relational_expression . '>' additive_expression
   61                      | relational_expression . LE_OP additive_expression
   62                      | relational_expression . GE_OP additive_expression
   65 equality_expression: equality_expression NE_OP relational_expression .

    LE_OP  shift, and go to state 63
    GE_OP  shift, and go to state 64
    '<'    shift, and go to state 65
    '>'    shift, and go to state 66

    $default  reduce using rule 65 (equality_expression)


State 93

   64 equality_expression: equality_expression . EQ_OP relational_expression
   65                    | equality_expression . NE_OP relational_expression
   67 and_expression: and_expression '&' equality_expression .

    EQ_OP  shift, and go to state 67
    NE_OP  shift, and go to state 68

    $default  reduce using rule 67 (and_expression)


State 94

   67 and_expression: and_expression . '&' equality_expression
   69 exclusive_or_expression: exclusive_or_expression '^' and_expression .

    '&'  shift, and go to state 69

    $default  reduce using rule 69 (exclusive_or_expression)


State 95

   69 exclusive_or_expression: exclusive_or_expression . '^' and_expression
   71 inclusive_or_expression: inclusive_or_expression '|' exclusive_or_expression .

    '^'  shift, and go to state 70

    $default  reduce using rule 71 (inclusive_or_expression)


State 96

   71 inclusive_or_expression: inclusive_or_expression . '|' exclusive_or_expression
   73 logical_and_expression: logical_and_expression AND_OP inclusive_or_expression .

    '|'  shift, and go to state 71

    $default  reduce using rule 73 (logical_and_expression)


State 97

   73 logical_and_expression: logical_and_expression . AND_OP inclusive_or_expression
   75 logical_or_expression: logical_or_expression OR_OP logical_and_expression .

    AND_OP  shift, and go to state 72

    $default  reduce using rule 75 (logical_or_expression)


State 98

   25 direct_declarator: '(' declarator ')' .

    $default  reduce using rule 25 (direct_declarator)


State 99

    9 init_declarator: declarator '=' assignment_expression .

    $default  reduce using rule 9 (init_declarator)


State 100

   41 selection_statement: IF . '(' expression ')' statement
   42                    | IF . '(' expression ')' statement ELSE statement

    '('  shift, and go to state 117


State 101

   43 iteration_statement: WHILE . '(' expression ')' statement

    '('  shift, and go to state 118


State 102

   44 iteration_statement: DO . statement WHILE '(' expression ')' ';'

    INC_OP          shift, and go to state 20
    DEC_OP          shift, and go to state 21
    IF              shift, and go to state 100
    WHILE           shift, and go to state 101
    DO              shift, and go to state 102
    IDENTIFIER      shift, and go to state 22
    CONSTANT        shift, and go to state 23
    STRING_LITERAL  shift, and go to state 24
    RETURN          shift, and go to state 11
    ';'             shift, and go to state 103
    '('             shift, and go to state 25
    '{'             shift, and go to state 77

    compound_statement         go to state 108
    statement                  go to state 119
    jump_statement             go to state 111
    expression_statement       go to state 112
    selection_statement        go to state 113
    iteration_statement        go to state 114
    expression                 go to state 115
    postfix_expression         go to state 27
    unary_expression           go to state 28
    multiplicative_expression  go to state 29
    additive_expression        go to state 30
    relational_expression      go to state 31
    equality_expression        go to state 32
    and_expression             go to state 33
    exclusive_or_expression    go to state 34
    inclusive_or_expression    go to state 35
    logical_and_expression     go to state 36
    logical_or_expression      go to state 37
    assignment_expression      go to state 38
    primary_expression         go to state 39


State 103

   39 expression_statement: ';' .

    $default  reduce using rule 39 (expression_statement)


State 104

   27 compound_statement: '{' '}' .

    $default  reduce using rule 27 (compound_statement)


State 105

    6 declaration_list: declaration_list . declaration
   29 compound_statement: '{' declaration_list . statement_list '}'
   30                   | '{' declaration_list . '}'

    INC_OP          shift, and go to state 20
    DEC_OP          shift, and go to state 21
    IF              shift, and go to state 100
    WHILE           shift, and go to state 101
    DO              shift, and go to state 102
    IDENTIFIER      shift, and go to state 22
    CONSTANT        shift, and go to state 23
    STRING_LITERAL  shift, and go to state 24
    CHAR            shift, and go to state 1
    SHORT           shift, and go to state 2
    INT             shift, and go to state 3
    LONG            shift, and go to state 4
    SIGNED          shift, and go to state 5
    UNSIGNED        shift, and go to state 6
    FLOAT           shift, and go to state 7
    DOUBLE          shift, and go to state 8
    VOID            shift, and go to state 9
    TYPE_NAME       shift, and go to state 10
    RETURN          shift, and go to state 11
    ';'             shift, and go to state 103
    '('             shift, and go to state 25
    '{'             shift, and go to state 77
    '}'             shift, and go to state 120

    declaration                go to state 121
    declaration_specifiers     go to state 107
    type_specifier             go to state 18
    compound_statement         go to state 108
    statement_list             go to state 122
    statement                  go to state 110
    jump_statement             go to state 111
    expression_statement       go to state 112
    selection_statement        go to state 113
    iteration_statement        go to state 114
    expression                 go to state 115
    postfix_expression         go to state 27
    unary_expression           go to state 28
    multiplicative_expression  go to state 29
    additive_expression        go to state 30
    relational_expression      go to state 31
    equality_expression        go to state 32
    and_expression             go to state 33
    exclusive_or_expression    go to state 34
    inclusive_or_expression    go to state 35
    logical_and_expression     go to state 36
    logical_or_expression      go to state 37
    assignment_expression      go to state 38
    primary_expression         go to state 39


State 106

    5 declaration_list: declaration .

    $default  reduce using rule 5 (declaration_list)


State 107

    7 declaration: declaration_specifiers . init_declarator ';'

    IDENTIFIER  shift, and go to state 41
    '('         shift, and go to state 42

    init_declarator    go to state 43
    declarator         go to state 123
    direct_declarator  go to state 45


State 108

   35 statement: compound_statement .

    $default  reduce using rule 35 (statement)


State 109

   28 compound_statement: '{' statement_list . '}'
   32 statement_list: statement_list . statement

    INC_OP          shift, and go to state 20
    DEC_OP          shift, and go to state 21
    IF              shift, and go to state 100
    WHILE           shift, and go to state 101
    DO              shift, and go to state 102
    IDENTIFIER      shift, and go to state 22
    CONSTANT        shift, and go to state 23
    STRING_LITERAL  shift, and go to state 24
    RETURN          shift, and go to state 11
    ';'             shift, and go to state 103
    '('             shift, and go to state 25
    '{'             shift, and go to state 77
    '}'             shift, and go to state 124

    compound_statement         go to state 108
    statement                  go to state 125
    jump_statement             go to state 111
    expression_statement       go to state 112
    selection_statement        go to state 113
    iteration_statement        go to state 114
    expression                 go to state 115
    postfix_expression         go to state 27
    unary_expression           go to state 28
    multiplicative_expression  go to state 29
    additive_expression        go to state 30
    relational_expression      go to state 31
    equality_expression        go to state 32
    and_expression             go to state 33
    exclusive_or_expression    go to state 34
    inclusive_or_expression    go to state 35
    logical_and_expression     go to state 36
    logical_or_expression      go to state 37
    assignment_expression      go to state 38
    primary_expression         go to state 39


State 110

   31 statement_list: statement .

    $default  reduce using rule 31 (statement_list)


State 111

   33 statement: jump_statement .

    $default  reduce using rule 33 (statement)


State 112

   34 statement: expression_statement .

    $default  reduce using rule 34 (statement)


State 113

   36 statement: selection_statement .

    $default  reduce using rule 36 (statement)


State 114

   37 statement: iteration_statement .

    $default  reduce using rule 37 (statement)


State 115

   40 expression_statement: expression . ';'

    ';'  shift, and go to state 126


State 116

   26 direct_declarator: direct_declarator '(' ')' .

    $default  reduce using rule 26 (direct_declarator)


State 117

   41 selection_statement: IF '(' . expression ')' statement
   42                    | IF '(' . expression ')' statement ELSE statement

    INC_OP          shift, and go to state 20
    DEC_OP          shift, and go to state 21
    IDENTIFIER      shift, and go to state 22
    CONSTANT        shift, and go to state 23
    STRING_LITERAL  shift, and go to state 24
    '('             shift, and go to state 25

    expression                 go to state 127
    postfix_expression         go to state 27
    unary_expression           go to state 28
    multiplicative_expression  go to state 29
    additive_expression        go to state 30
    relational_expression      go to state 31
    equality_expression        go to state 32
    and_expression             go to state 33
    exclusive_or_expression    go to state 34
    inclusive_or_expression    go to state 35
    logical_and_expression     go to state 36
    logical_or_expression      go to state 37
    assignment_expression      go to state 38
    primary_expression         go to state 39


State 118

   43 iteration_statement: WHILE '(' . expression ')' statement

    INC_OP          shift, and go to state 20
    DEC_OP          shift, and go to state 21
    IDENTIFIER      shift, and go to state 22
    CONSTANT        shift, and go to state 23
    STRING_LITERAL  shift, and go to state 24
    '('             shift, and go to state 25

    expression                 go to state 128
    postfix_expression         go to state 27
    unary_expression           go to state 28
    multiplicative_expression  go to state 29
    additive_expression        go to state 30
    relational_expression      go to state 31
    equality_expression        go to state 32
    and_expression             go to state 33
    exclusive_or_expression    go to state 34
    inclusive_or_expression    go to state 35
    logical_and_expression     go to state 36
    logical_or_expression      go to state 37
    assignment_expression      go to state 38
    primary_expression         go to state 39


State 119

   44 iteration_statement: DO statement . WHILE '(' expression ')' ';'

    WHILE  shift, and go to state 129


State 120

   30 compound_statement: '{' declaration_list '}' .

    $default  reduce using rule 30 (compound_statement)


State 121

    6 declaration_list: declaration_list declaration .

    $default  reduce using rule 6 (declaration_list)


State 122

   29 compound_statement: '{' declaration_list statement_list . '}'
   32 statement_list: statement_list . statement

    INC_OP          shift, and go to state 20
    DEC_OP          shift, and go to state 21
    IF              shift, and go to state 100
    WHILE           shift, and go to state 101
    DO              shift, and go to state 102
    IDENTIFIER      shift, and go to state 22
    CONSTANT        shift, and go to state 23
    STRING_LITERAL  shift, and go to state 24
    RETURN          shift, and go to state 11
    ';'             shift, and go to state 103
    '('             shift, and go to state 25
    '{'             shift, and go to state 77
    '}'             shift, and go to state 130

    compound_statement         go to state 108
    statement                  go to state 125
    jump_statement             go to state 111
    expression_statement       go to state 112
    selection_statement        go to state 113
    iteration_statement        go to state 114
    expression                 go to state 115
    postfix_expression         go to state 27
    unary_expression           go to state 28
    multiplicative_expression  go to state 29
    additive_expression        go to state 30
    relational_expression      go to state 31
    equality_expression        go to state 32
    and_expression             go to state 33
    exclusive_or_expression    go to state 34
    inclusive_or_expression    go to state 35
    logical_and_expression     go to state 36
    logical_or_expression      go to state 37
    assignment_expression      go to state 38
    primary_expression         go to state 39


State 123

    8 init_declarator: declarator .
    9                | declarator . '=' assignment_expression

    '='  shift, and go to state 76

    $default  reduce using rule 8 (init_declarator)


State 124

   28 compound_statement: '{' statement_list '}' .

    $default  reduce using rule 28 (compound_statement)


State 125

   32 statement_list: statement_list statement .

    $default  reduce using rule 32 (statement_list)


State 126

   40 expression_statement: expression ';' .

    $default  reduce using rule 40 (expression_statement)


State 127

   41 selection_statement: IF '(' expression . ')' statement
   42                    | IF '(' expression . ')' statement ELSE statement

    ')'  shift, and go to state 131


State 128

   43 iteration_statement: WHILE '(' expression . ')' statement

    ')'  shift, and go to state 132


State 129

   44 iteration_statement: DO statement WHILE . '(' expression ')' ';'

    '('  shift, and go to state 133


State 130

   29 compound_statement: '{' declaration_list statement_list '}' .

    $default  reduce using rule 29 (compound_statement)


State 131

   41 selection_statement: IF '(' expression ')' . statement
   42                    | IF '(' expression ')' . statement ELSE statement

    INC_OP          shift, and go to state 20
    DEC_OP          shift, and go to state 21
    IF              shift, and go to state 100
    WHILE           shift, and go to state 101
    DO              shift, and go to state 102
    IDENTIFIER      shift, and go to state 22
    CONSTANT        shift, and go to state 23
    STRING_LITERAL  shift, and go to state 24
    RETURN          shift, and go to state 11
    ';'             shift, and go to state 103
    '('             shift, and go to state 25
    '{'             shift, and go to state 77

    compound_statement         go to state 108
    statement                  go to state 134
    jump_statement             go to state 111
    expression_statement       go to state 112
    selection_statement        go to state 113
    iteration_statement        go to state 114
    expression                 go to state 115
    postfix_expression         go to state 27
    unary_expression           go to state 28
    multiplicative_expression  go to state 29
    additive_expression        go to state 30
    relational_expression      go to state 31
    equality_expression        go to state 32
    and_expression             go to state 33
    exclusive_or_expression    go to state 34
    inclusive_or_expression    go to state 35
    logical_and_expression     go to state 36
    logical_or_expression      go to state 37
    assignment_expression      go to state 38
    primary_expression         go to state 39


State 132

   43 iteration_statement: WHILE '(' expression ')' . statement

    INC_OP          shift, and go to state 20
    DEC_OP          shift, and go to state 21
    IF              shift, and go to state 100
    WHILE           shift, and go to state 101
    DO              shift, and go to state 102
    IDENTIFIER      shift, and go to state 22
    CONSTANT        shift, and go to state 23
    STRING_LITERAL  shift, and go to state 24
    RETURN          shift, and go to state 11
    ';'             shift, and go to state 103
    '('             shift, and go to state 25
    '{'             shift, and go to state 77

    compound_statement         go to state 108
    statement                  go to state 135
    jump_statement             go to state 111
    expression_statement       go to state 112
    selection_statement        go to state 113
    iteration_statement        go to state 114
    expression                 go to state 115
    postfix_expression         go to state 27
    unary_expression           go to state 28
    multiplicative_expression  go to state 29
    additive_expression        go to state 30
    relational_expression      go to state 31
    equality_expression        go to state 32
    and_expression             go to state 33
    exclusive_or_expression    go to state 34
    inclusive_or_expression    go to state 35
    logical_and_expression     go to state 36
    logical_or_expression      go to state 37
    assignment_expression      go to state 38
    primary_expression         go to state 39


State 133

   44 iteration_statement: DO statement WHILE '(' . expression ')' ';'

    INC_OP          shift, and go to state 20
    DEC_OP          shift, and go to state 21
    IDENTIFIER      shift, and go to state 22
    CONSTANT        shift, and go to state 23
    STRING_LITERAL  shift, and go to state 24
    '('             shift, and go to state 25

    expression                 go to state 136
    postfix_expression         go to state 27
    unary_expression           go to state 28
    multiplicative_expression  go to state 29
    additive_expression        go to state 30
    relational_expression      go to state 31
    equality_expression        go to state 32
    and_expression             go to state 33
    exclusive_or_expression    go to state 34
    inclusive_or_expression    go to state 35
    logical_and_expression     go to state 36
    logical_or_expression      go to state 37
    assignment_expression      go to state 38
    primary_expression         go to state 39


State 134

   41 selection_statement: IF '(' expression ')' statement .
   42                    | IF '(' expression ')' statement . ELSE statement

    ELSE  shift, and go to state 137

    $default  reduce using rule 41 (selection_statement)


State 135

   43 iteration_statement: WHILE '(' expression ')' statement .

    $default  reduce using rule 43 (iteration_statement)


State 136

   44 iteration_statement: DO statement WHILE '(' expression . ')' ';'

    ')'  shift, and go to state 138


State 137

   42 selection_statement: IF '(' expression ')' statement ELSE . statement

    INC_OP          shift, and go to state 20
    DEC_OP          shift, and go to state 21
    IF              shift, and go to state 100
    WHILE           shift, and go to state 101
    DO              shift, and go to state 102
    IDENTIFIER      shift, and go to state 22
    CONSTANT        shift, and go to state 23
    STRING_LITERAL  shift, and go to state 24
    RETURN          shift, and go to state 11
    ';'             shift, and go to state 103
    '('             shift, and go to state 25
    '{'             shift, and go to state 77

    compound_statement         go to state 108
    statement                  go to state 139
    jump_statement             go to state 111
    expression_statement       go to state 112
    selection_statement        go to state 113
    iteration_statement        go to state 114
    expression                 go to state 115
    postfix_expression         go to state 27
    unary_expression           go to state 28
    multiplicative_expression  go to state 29
    additive_expression        go to state 30
    relational_expression      go to state 31
    equality_expression        go to state 32
    and_expression             go to state 33
    exclusive_or_expression    go to state 34
    inclusive_or_expression    go to state 35
    logical_and_expression     go to state 36
    logical_or_expression      go to state 37
    assignment_expression      go to state 38
    primary_expression         go to state 39


State 138

   44 iteration_statement: DO statement WHILE '(' expression ')' . ';'

    ';'  shift, and go to state 140


State 139

   42 selection_statement: IF '(' expression ')' statement ELSE statement .

    $default  reduce using rule 42 (selection_statement)


State 140

   44 iteration_statement: DO statement WHILE '(' expression ')' ';' .

    $default  reduce using rule 44 (iteration_statement)
